{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue233;\red13\green0\blue129;
\red235\green236\blue237;\red36\green38\blue41;\red104\green26\blue29;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c0\c0\c93333;\cssrgb\c6275\c6275\c58039;
\cssrgb\c93725\c94118\c94510;\cssrgb\c18824\c20000\c21176;\cssrgb\c49020\c15294\c15294;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\b\fs24 \cf2 \expnd0\expndtw0\kerning0
Overview
\b0 \
For the Udacity Logs Analysis Project, we were asked to connect to build an internal reporting tool using information from a database about a \'93newspaper site.\'94 The program, which would be run from the command line, had to answer some queries about the website using the database \'93behind\'94 the site.\'a0 \
\
To do this, we had to connect to a database, use SQL queries to analyze the log data, and print out the answers to the questions:\'a0 \
1. What are the most popular three articles of all time? \
2. Who are the most popular article authors of all time? \
3. On which days did more than 1% of requests lead to errors?\'a0 \
\

\b Setting up for the project
\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl280\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	1.	}\expnd0\expndtw0\kerning0
Installvagrant ({\field{\*\fldinst{HYPERLINK "https://www.vagrantup.com/"}}{\fldrslt \cf3 \ul \ulc3 https://www.vagrantup.com/}}) and virtual box ({\field{\*\fldinst{HYPERLINK "https://www.virtualbox.org/wiki/Downloads"}}{\fldrslt \cf3 \ul \ulc3 https://www.virtualbox.org/wiki/Downloads}})\'a0\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
Download the vagrant configuration files (FSND Virtual Machine - udacity logs projects). Save the folder on your desktop.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
Download the\'a0newsdata.sql file and place it into the vagrant directory\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
cd into your vagrant directory\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
vagrant up\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6.	}\expnd0\expndtw0\kerning0
vagrant ssh\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
Use the command\'a0psql -d news -f newsdata.sql (this creates the database and load the data)\
\pard\pardeftab720\sl280\partightenfactor0
\cf2 \
After taking these steps, you should be all set up to start answering the questions. \
\

\b Answering the Questions
\b0 \
To answer the first question \'97\'a0
\b What are the most popular three articles of all time?
\b0 \'a0\'97 take the following steps: \
\
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 Step 1) Create a view slug with the times and the slug cut out from the url (i.e. everything after last / ). This will set us up to join the articles table on the slug.\'a0
\i0 \
CREATE\'a0VIEW\'a0Slug AS \
\pard\pardeftab720\sl280\partightenfactor0
\cf4 \cb5 SELECT\cf2 \cb1  \cf6 \cb5 SUBSTRING(path,\'a0\cf7 10\cf6 ) as short_path, time\cf2 \cb1  \cf4 \cb5 from\cf6 \'a0log;\cf2 \cb1  \
\
\pard\pardeftab720\sl280\partightenfactor0

\i \cf2 Step 2) Create a view slug_title with times, article titles, and slug by joining on the slug.
\i0 \
CREATE VIEW slug_title AS \
SELECT\'a0Slug.\cf6 \cb5 short_path\cf2 \cb1 , Slug.time, articles.title \
FROM\'a0Slug \
INNER\'a0JOIN articles ON\'a0articles.slug=Slug.\cf6 \cb5 short_path\cf2 \cb1 ; \
\

\i Step 3) Run query\'a0selecting the titles from the slug_title table, ordered by the count of the article titles accessed most often. Limit 3 to show the top three article titles.\'a0
\i0 \
SELECT title \
FROM slug_title \
GROUP BY\'a0title \
ORDER BY COUNT(title) DESC \
Limit 3; \
\
To answer the second question \'97\'a0
\b Who are the most popular article authors of all time?\'a0
\b0 \'97 I took the following steps: \
\

\i Step 1) Create a view with author name and slug by joining on author ID from the articles and authors tables.
\i0 \
CREATE VIEW author_name_article AS \
SELECT authors.name, articles.slug \
FROM\'a0articles \
INNER\'a0JOIN\'a0authors ON\'a0articles.author=authors.id; \
\

\i Step 2) Create a view with author name and slug, joining on the slug from the new author_name view and logs table.\'a0
\i0 \
CREATE VIEW author_name_times AS\'a0 \
SELECT\'a0author_name_article.name, slug_title.short_path \
FROM slug_title \
INNER JOIN author_name_article\'a0ON slug_title.short_path=author_name_article.slug; \
\

\i Step 3) Run query counting the number of times the path appears in the author_name_times view. Sort by author name with most often seen author on top, then select the top three author names.
\i0 \'a0 \
SELECT author_name_times.name \
FROM author_name_times \
GROUP BY\'a0author_name_times.name \
ORDER BY COUNT(author_name_times.name) DESC \
Limit 3; \
\
Finally, to answer the third question 
\b \'97 On which days did more than 1% of requests lead to errors?\'97
\b0  I took the following steps: \
\

\i Step 1) Create view errors with columns of counts matched with days where status != 200 OK.
\i0 \
CREATE VIEW errors AS \
SELECT count(*) AS COUNT, \
\'a0\'a0\'a0\'a0\'a0\'a0 date.day AS date \
FROM date \
WHERE status!='200 OK' \
GROUP BY day \
ORDER BY COUNT DESC; \
\

\i Step 2) Create view totals with columns of counts matched with days where status = 200 OK.
\i0 \
CREATE VIEW totals AS\'a0 \
SELECT count(*) AS COUNT, \
\'a0\'a0\'a0\'a0\'a0\'a0 date.day AS date \
FROM date \
GROUP BY day \
ORDER BY COUNT DESC; \
\

\i Step 4)\'a0Create view counting the number of days that the percentage of errors (i.e. errors / totals * 100) was greater than 1%.
\i0 \
CREATE VIEW error_date AS \
SELECT totals.date, (100.0*errors.count/totals.count) AS percentage \
FROM errors, totals \
WHERE errors.date=totals.date AND (100.0*errors.count/totals.count) >1 \
ORDER BY totals.date; \
\
Step 5)\'a0
\i Run query showing the days from the view created above.
\i0  \
SELECT date from error_date; \
\
\
\
\
\
\
\
}